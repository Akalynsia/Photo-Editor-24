import { useState } from "react";
import "./styles.css";
export default function App() {
  const [filter, setFilter] = useState({
    brightness: 1,
    contrast: 1,
    saturation: 1,
  });

  const handleRangeChange = (e) => {
    const { name, value } = e.target;
    setFilter((prevFilter) => ({ ...prevFilter, [name]: parseFloat(value) }));
    document.documentElement.style.setProperty(`--${name}`, value);
  };

  const { brightness, contrast, saturation } = filter;

  const imageStyle = {
    filter: `brightness(${brightness}) contrast(${contrast}) saturation(${saturation})`,
  };

  /* Challenge

    Range input'larÄ± henÃ¼z hiÃ§bir ÅŸey yapmÄ±yor. Sizin gÃ¶reviniz bunlarÄ± aÅŸaÄŸÄ±daki gibi Ã§alÄ±ÅŸtÄ±rmaktÄ±r: 
    
        1. KullanÄ±cÄ± range input kaydÄ±rÄ±cÄ±larÄ±ndan birini her hareket ettirdiÄŸinde, filter state nesnesindeki karÅŸÄ±lÄ±k gelen deÄŸer, deÄŸiÅŸmeyen diÄŸer iki deÄŸer korunarak input deÄŸeri olacak ÅŸekilde gÃ¼ncellenmelidir. 
           
        2. Filter state nesnesinin her gÃ¼ncellemesinde, --brightness, --contrast ve 
           --saturation GÃ¶rÃ¼ntÃ¼nÃ¼n filter Ã¶zelliklerini kontrol eden CSS deÄŸiÅŸkenleri, karÅŸÄ±lÄ±k gelen filter state nesne Ã¶zelliklerinin deÄŸerleri olacak ÅŸekilde gÃ¼ncellenmelidir. Ä°lgili CSS, styles.css dosyasÄ±nÄ±n 1-13 satÄ±rlarÄ±nda bulunabilir. 
		                       
        3. Range input'larÄ±nÄ±n baÅŸlangÄ±Ã§ deÄŸerleri, filter state nesnesindeki karÅŸÄ±lÄ±k gelen Ã¶zelliklerinin baÅŸlangÄ±Ã§ deÄŸerleri olmalÄ±dÄ±r.   
		   
		4. Kodunuzu mÃ¼mkÃ¼n olduÄŸunca DRY yapmaya Ã§alÄ±ÅŸÄ±n
*/

  return (
    <div className="main-container">
      <h1>
        <span>ğŸ“·</span> Photo EditÃ¶rÃ¼ <span>ğŸ“·</span>
      </h1>

      <div className="image-container">
        <img
          src="./images/kunal-goswami-CuUn__aMGD4-unsplash.jpg"
          style={imageStyle}
        />
      </div>

      <form>
        <label>
          <input
            type="range"
            name="brightness"
            min={0}
            max={2}
            step={0.1}
            value={brightness}
            onChange={handleRangeChange}
          />
          <span>Brightness</span>
        </label>

        <label>
          <input
            type="range"
            name="contrast"
            min={0}
            max={2}
            step={0.1}
            value={contrast}
            onChange={handleRangeChange}
          />
          <span>Contrast</span>
        </label>

        <label>
          <input
            type="range"
            name="saturation"
            min={0}
            max={2}
            step={0.1}
            value={saturation}
            onChange={handleRangeChange}
          />
          <span>Saturation</span>
        </label>
      </form>
    </div>
  );
}
